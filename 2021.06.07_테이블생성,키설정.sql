--공지사항
CREATE TABLE NOTICE(
    NOTICE_NO NUMBER NOT NULL,
    NOTICE_SUB VARCHAR2(50) NOT NULL,
    NOTICE_CON VARCHAR2(2000) NOT NULL,
    NOTICE_DATE DATE NOT NULL,
    NOTICE_KIND VARCHAR2(10) NOT NULL,
    NOTICE_FLIE VARCHAR2(300),
    NOTICE_COUNT NUMBER NOT NULL,
    --넘어온 속성까지 만들어야 함
    EMPLOYEE_ID NUMBER
);


--직원
CREATE TABLE EMPLOYEES(
    EMPLOYEE_ID NUMBER NOT NULL,
    EMP_USERID VARCHAR2(20) NOT NULL,
    EMP_PW VARCHAR2(300) NOT NULL,
    EMP_NAME VARCHAR2(15) NOT NULL,
    HIRE_DATE DATE NOT NULL,
    JOB_ID VARCHAR2(20) NOT NULL,
    PH_NUMBER VARCHAR2(13) NOT NULL,
    OFFICE_NUMBER VARCHAR2(13),
    EMAIL VARCHAR2(50) NOT NULL,
    EMP_ADDRESS VARCHAR2(200) NOT NULL
);

--상품
CREATE TABLE PRODUCTS(
    PROD_NUM NUMBER NOT NULL,
    PROD_NAME VARCHAR2(300) NOT NULL,
    PROD_PRICE NUMBER NOT NULL,
    PROD_IMAGE VARCHAR2(300),
    PROD_DETAIL VARCHAR2(2000) NOT NULL,
    PROD_CAPACITY NUMBER,
    PROD_SUPPLYER VARCHAR2(200) NOT NULL,
    PROD_DEL_FEE NUMBER NOT NULL,
    RECOMMEND CHAR(1) NOT NULL,
    EMPLOYEE_ID NUMBER
);

--장바구니
CREATE TABLE CART(
    PROD_NUM NUMBER NOT NULL,
    MEM_ID VARCHAR2(20) NOT NULL,
    CART_QTY NUMBER NOT NULL,
    CART_PRICE NUMBER NOT NULL
);

--회원
CREATE TABLE MEMBER(
    MEM_ID VARCHAR2(20) NOT NULL,
    MEM_PW VARCHAR2(300) NOT NULL,
    MEM_ADDRESS VARCHAR2(200) NOT NULL,
    MEM_NAME VARCHAR2(200) NOT NULL,
    MEM_PHONE VARCHAR2(15) NOT NULL,
    MEM_BIRTH DATE NOT NULL,
    MEM_GENDER CHAR(1) NOT NULL,
    MEM_ACCOUNT VARCHAR2(20),
    MEM_EMAIL VARCHAR2(50) NOT NULL,
    MEM_EMAIL_CK CHAR(1) NOT NULL
);

--구매리스트
CREATE TABLE PURCHASE_LIST(
    PROD_NUM NUMBER NOT NULL,
    PURCHASE_NUM NUMBER NOT NULL,
    MEM_ID VARCHAR2(20) NOT NULL,
    PURDHASE_QTY NUMBER NOT NULL,
    PURDHASE_PRICE NUMBER NOT NULL
);

--구매
CREATE TABLE PURCHASE(
    PURCHASE_NUM NUMBER NOT NULL,
    MEM_ID VARCHAR2(20) NOT NULL,
    PURCHASE_TOT_PRICE NUMBER NOT NULL,
    PURCHASE_ADDR VARCHAR2(200) NOT NULL,
    PURCHASE_METHOD VARCHAR2(20) NOT NULL,
    PURCHASE_REQUEST VARCHAR2(300),
    PURCHASE_NAME VARCHAR2(15) NOT NULL,
    PURCHASE_PHONE VARCHAR2(200) NOT NULL,
    PURCHASE_DATE DATE NOT NULL
);

--후기
CREATE TABLE REVIEW(
    PROD_NUM NUMBER NOT NULL,
    PURCHASE_NUM NUMBER NOT NULL,
    MEM_ID VARCHAR2(20) NOT NULL,
    REVIEW_DATE DATE NOT NULL,
    REVIEW_CONTENT VARCHAR2(2000) NOT NULL,
    REVIEW_IMG VARCHAR2(300)
);

-- 반품, 교환
CREATE TABLE REFUND_EXCHAGE(
    PROD_NUM NUMBER NOT NULL,
    PURCHASE_NUM NUMBER NOT NULL,
    MEM_ID VARCHAR2(20) NOT NULL,
    REASON VARCHAR2(2000) NOT NULL,
    REFUND_EXCHAGE CHAR(1) NOT NULL,
    CARD_CANCLE CHAR(1),
    COST NUMBER NOT NULL,
    ADDCOUNT NUMBER,
    ADDR VARCHAR2(200) NOT NULL
);

--결제
CREATE TABLE PAYMENT(
PURCHASE_NUM NUMBER NOT NULL,
MEM_ID VARCHAR2(20) NOT NULL,
PAYMENT_METHOD VARCHAR2(14) NOT NULL,
PAYMENT_APPR_PRICE NUMBER NOT NULL,
PAYMENT_APPR_NUM NUMBER,
PAYMENT_APPR_DATE DATE NOT NULL,
PAYMENT_NUMBER NUMBER NOT NULL
);

--배송
CREATE TABLE DELIVERY(
    PURCHASE_NUM NUMBER NOT NULL,
    MEM_ID VARCHAR2(20) NOT NULL,
    DELIVERY_COM VARCHAR2(200) NOT NULL,
    DELIVER_NUM NUMBER NOT NULL,
    DELIVERY_EXP_DATE DATE NOT NULL,
    ARRIVAL_EXP_DATE DATE NOT NULL,
    DELIVERY_DEL_FREE NUMBER NOT NULL
);


--- PRIMARY KEY 생성
ALTER TABLE NOTICE
ADD CONSTRAINT NOTICE_NO_PK PRIMARY KEY(NOTICE_NO);

ALTER TABLE EMPLOYEES
ADD CONSTRAINT EMP_EMPLOYEE_ID_PK PRIMARY KEY(EMPLOYEE_ID);

ALTER TABLE PRODUCTS
ADD CONSTRAINT PRODU_PROD_NUM_PK PRIMARY KEY(PROD_NUM);

ALTER TABLE CART
ADD CONSTRAINT PROD_MEM_PK PRIMARY KEY(PROD_NUM, MEM_ID);

ALTER TABLE MEMBER
ADD CONSTRAINT MEM_ID_PK PRIMARY KEY(MEM_ID);

ALTER TABLE PURCHASE
ADD CONSTRAINT PUR_PURCHSSE_NUM_PK PRIMARY KEY(PURCHASE_NUM);

ALTER TABLE PURCHASE_LIST
ADD CONSTRAINT PROD_PURCHSE_PK PRIMARY KEY(PROD_NUM, PURCHASE_NUM);

ALTER TABLE REVIEW
ADD CONSTRAINT PROD_PURCHSE_NUM_PK PRIMARY KEY(PROD_NUM, PURCHASE_NUM);

ALTER TABLE REFUND_EXCHAGE
ADD CONSTRAINT REF_PROD_PURCHSE_PK PRIMARY KEY(PROD_NUM, PURCHASE_NUM);

ALTER TABLE PAYMENT
ADD CONSTRAINT PAY_PRUCHSE_PK PRIMARY KEY(PURCHASE_NUM);

---------- FOREIGN KEY

ALTER TABLE NOTICE
ADD CONSTRAINT NOTICE_EMP_ID_FK FOREIGN KEY(EMPLOYEE_ID)
REFERENCES EMPLOYEES(EMPLOYEE_ID) ON DELETE SET NULL;
-- 직원테이블의 직원이 삭제되면 공지사항 테이블의 사원번호를 널값으로 하겠다.

ALTER TABLE PRODUCTS
ADD CONSTRAINT PRODUCTS_EMP_NO_FK FOREIGN KEY(EMPLOYEE_ID)
REFERENCES EMPLOYEES(EMPLOYEE_ID) ON DELETE SET NULL;


ALTER TABLE CART
ADD CONSTRAINT CART_MEM_ID_FK FOREIGN KEY(MEM_ID)
REFERENCES MEMBER(MEM_ID) ON DELETE CASCADE;
-- 부모가 삭제될때  자식 CART도 같이 삭제

ALTER TABLE CART
ADD CONSTRAINT CART_PROD_NUM_FK FOREIGN KEY(PROD_NUM)
REFERENCES PRODUCTS(PROD_NUM) ON DELETE CASCADE; --상품이 삭제되면 장바구니도 비워진다.

ALTER TABLE PURCHASE
ADD CONSTRAINT PURCHASE_MEM_ID_KF FOREIGN KEY(MEM_ID)
REFERENCES MEMBER(MEM_ID) ON DELETE SET NULL;

ALTER TABLE PURCHASE_LIST
ADD CONSTRAINT PURCHASE_LIST_PURCHASE_FK FOREIGN KEY(PURCHASE_NUM)
REFERENCES PURCHASE(PURCHASE_NUM);

ALTER TABLE PURCHASE_LIST
ADD CONSTRAINT PURCHASE_LIST_PROD_NUM_FK FOREIGN KEY(PROD_NUM)
REFERENCES PRODUCTS(PROD_NUM);

ALTER TABLE REVIEW
ADD CONSTRAINT REVIEW_FK FOREIGN KEY (PROD_NUM, PURCHASE_NUM)
REFERENCES PURCHASE_LIST(PROD_NUM, PURCHASE_NUM);

ALTER TABLE REFUND_EXCHAGE
ADD CONSTRAINT REFUND_EXCHAGE_FK FOREIGN KEY (PROD_NUM, PURCHASE_NUM)
REFERENCES PURCHASE_LIST(PROD_NUM, PURCHASE_NUM);

ALTER TABLE PAYMENT
ADD CONSTRAINT PAMENT_PURCHASE_NUM_FK FOREIGN KEY(PURCHASE_NUM)
REFERENCES PURCHASE(PURCHASE_NUM);

ALTER TABLE DELIVERY
ADD CONSTRAINT DELI_PRUCHASE_NUM_FK FOREIGN KEY(PURCHASE_NUM)
REFERENCES PURCHASE(PURCHASE_NUM);